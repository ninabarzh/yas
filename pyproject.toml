[tool.pytest.ini_options]
# Add the current directory to PYTHONPATH
pythonpath = "."

# The directory where pytest should look for tests
testpaths = ["tests"]

# Enable logging output during test execution
log_cli = true
log_level = "INFO"

# Currently, the event loop scope defaults to the fixture caching scope, but in the future, it will default to
# function scope. To avoid unexpected behavior when upgrading pytest-asyncio, explicitly set the loop scope:
asyncio_default_fixture_loop_scope = "function"

# Addopts: Enable verbose output and coverage reporting
addopts = "-v --showlocals --cov=backend --cov-report=term-missing"

#---------------------------------------------------------------------------------------------------------------
[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"  # Adjust to your Python version

[tool.ruff.lint]

# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

#---------------------------------------------------------------------------------------------------------------
[tool.ruff.format]

# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

#---------------------------------------------------------------------------------------------------------------
[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".